
==================== FINAL INTERFACE ====================
2017-08-22 19:44:18.329151 UTC

interface main@main:Main 8002
  interface hash: 33629ada417b34c75d8f64e232a66bac
  ABI hash: 7c96edf11dd9a13d209eaa45d6a63180
  export-list hash: 7780a160796d6662ec2ace8d0a050095
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 487a2b9f02429dad4f013a03c200eeef
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.add5Test
  Main.main
  Main.mingleFastTest
  Main.mingleTest
  Main.sayYoTest
  Main.stringOpermuteTest
module dependencies:
package dependencies: ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-A79v826bgPr574HtaZPPqC
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      clock-0.7.2@clock-0.7.2-8dRNleB7rysIZAOReuhpZA
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hacker-rank-0.1.0.0@hacker-rank-0.1.0.0-GjpRxb8iNAQ3hTKyQdsJV0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-EqIYOWOFTvf23sT5QTYn9U
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      process-1.4.3.0@process-1.4.3.0
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tasty-0.11.2.5@tasty-0.11.2.5-9CHOVHcPPPS3fAInAil5pA
                      tasty-hunit-0.9.2@tasty-hunit-0.9.2-8EqOuwvMdXe8awhjhOAP3F
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unbounded-delays-0.1.1.0@unbounded-delays-0.1.1.0-8pvOsE97fmS7WDAN5vUbqX
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2@regex-tdfa-1.2.2-CuFri6F1SLwFkkN6cPEwX5:Text.Regex.TDFA.String
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         clock-0.7.2@clock-0.7.2-8dRNleB7rysIZAOReuhpZA:System.Clock
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         tasty-0.11.2.5@tasty-0.11.2.5-9CHOVHcPPPS3fAInAil5pA:Test.Tasty.Core
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hacker-rank-0.1.0.0@hacker-rank-0.1.0.0-GjpRxb8iNAQ3hTKyQdsJV0:Lib f1e64d9cf60a706cba1cb7615fbdc6c2
import  -/  hacker-rank-0.1.0.0@hacker-rank-0.1.0.0-GjpRxb8iNAQ3hTKyQdsJV0:MathLib 801733b1d5e69db7dec493ae84a987ec
import  -/  hacker-rank-0.1.0.0@hacker-rank-0.1.0.0-GjpRxb8iNAQ3hTKyQdsJV0:StringMingling 464eb0fed693b631173e95d362058b10
import  -/  tasty-0.11.2.5@tasty-0.11.2.5-9CHOVHcPPPS3fAInAil5pA:Test.Tasty 15dafa11fe8e747610e0587fe556c1c0
import  -/  tasty-0.11.2.5@tasty-0.11.2.5-9CHOVHcPPPS3fAInAil5pA:Test.Tasty.Core a2a223965f493ea4185b94a827cf616c
import  -/  tasty-hunit-0.9.2@tasty-hunit-0.9.2-8EqOuwvMdXe8awhjhOAP3F:Test.Tasty.HUnit 96627a165514407e616de370ec090116
import  -/  tasty-hunit-0.9.2@tasty-hunit-0.9.2-8EqOuwvMdXe8awhjhOAP3F:Test.Tasty.HUnit.Orig 6fb02f2910bbd54df12313c60e73becc
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
0b255a7dc6822624dcaadea4a0f2601c
  add5Test :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Main.add5Test4
                   Main.add5Test1
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
a4547b6f34ce5b3987b50a04294fd17c
  add5Test1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Tasty.HUnit.Orig.@=?2
                        @ GHC.Types.Int
                        GHC.Classes.$fEqInt
                        GHC.Show.$fShowInt
                        Main.add5Test3
                        Main.add5Test2
                        Main.add5Test2
                        eta1 of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.[] @ GHC.Types.Char #) }) -}
b7e6e1b672b310c18dd483977d00fa71
  add5Test2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10#) -}
1494dacbf94ea068b3c8c9be1ba05066
  add5Test3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Should add 5 to get 10"#) -}
d5c37c0b817ec78e4c29dceb1dcc7744
  add5Test4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Testing add5"#) -}
039ebccd367a264ce41837ef8278324d
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
838b6c497206086217204291976020a8
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Tasty.CmdLine.defaultMainWithIngredients1
                   Test.Tasty.defaultIngredients
                   Main.main2) -}
740470b813a4fa2eb997edeb1e708b78
  main2 :: Test.Tasty.Core.TestTree
  {- Strictness: m2,
     Unfolding: (Test.Tasty.Core.TestGroup Main.main8 Main.main3) -}
9c11335d5dc01a82c5ec2eda9cd93c24
  main3 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Main.sayYoTest
                   Main.main4) -}
0f191ef262de29536d9a4e0a5b2d3a5a
  main4 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Main.add5Test
                   Main.main5) -}
eb9409d950cc01c26687661bf6d665ba
  main5 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Main.mingleTest
                   Main.main6) -}
d050b0ec743f5882a9002ebe8c8832f1
  main6 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Main.mingleFastTest
                   Main.main7) -}
b8f461cd3f0123bf2c02e62b85d3a046
  main7 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Main.stringOpermuteTest
                   (GHC.Types.[] @ Test.Tasty.Core.TestTree)) -}
8aca375ff3f68ab06b7b22eb75baafdb
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Our Library Tests"#) -}
cc138ee953a8816a5c65f42c4045e084
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
955f55132fdaeffcd40fed30f823136b
  mingleFastTest :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Main.mingleFastTest7
                   Main.mingleFastTest1
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
b30ec3a7d9adca5f691acf49b4217a4c
  mingleFastTest1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Tasty.HUnit.Orig.@=?2
                        @ [GHC.Types.Char]
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Main.mingleFastTest6
                        Main.mingleFastTest5
                        Main.mingleFastTest2
                        eta1 of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.[] @ GHC.Types.Char #) }) -}
0d79674776899752da4d71232c007cf5
  mingleFastTest2 :: GHC.Base.String
  {- Unfolding: (StringMingling.mingleFast
                   Main.mingleFastTest4
                   Main.mingleFastTest3) -}
66ee581afa59de971bb0ade694595bd7
  mingleFastTest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pqrst"#) -}
383e6b6bb0ef0c116130f46b93f70dfb
  mingleFastTest4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "abcde"#) -}
e9f0911254c16eae6537766f45631432
  mingleFastTest5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "apbqcrdset"#) -}
b6ae953e5fc31152cde810752db8668d
  mingleFastTest6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Should mingle abcde pqrst"#) -}
b4af6d0b840067a6d3ddbf36d46db581
  mingleFastTest7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Testing mingleFast"#) -}
58b584e4f3ef49a23e29a7eef28538be
  mingleTest :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Main.mingleTest3
                   Main.mingleTest1
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
32281df18e089125605e1ef7d8fa099d
  mingleTest1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Tasty.HUnit.Orig.@=?2
                        @ [GHC.Types.Char]
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Main.mingleFastTest6
                        Main.mingleFastTest5
                        Main.mingleTest2
                        eta1 of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.[] @ GHC.Types.Char #) }) -}
171866bd57b87ee145bfb2a71d3305c3
  mingleTest2 :: GHC.Base.String
  {- Unfolding: (StringMingling.mingle
                   Main.mingleFastTest4
                   Main.mingleFastTest3) -}
ec028ad588a653f74391a8846d293dfb
  mingleTest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Testing mingle"#) -}
66b717b62f773742574d89d54d256fbb
  sayYoTest :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Main.sayYoTest6
                   Main.sayYoTest1
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
1276846baadc8d29a6e878643ee3407d
  sayYoTest1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Tasty.HUnit.Orig.@=?2
                        @ [GHC.Types.Char]
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Main.sayYoTest5
                        Main.sayYoTest4
                        Main.sayYoTest2
                        eta1 of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.[] @ GHC.Types.Char #) }) -}
7b8a0b4f00d25b8124bd83699d993848
  sayYoTest2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "Yo "#
                   Main.sayYoTest3) -}
cf285baa46b3ee049c15166e2624dbf2
  sayYoTest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "Friend"#
                   Lib.sayYo1) -}
c5d4b849d741bab64189709317f8c2cf
  sayYoTest4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Yo Friend!"#) -}
bf35047b82e553173b6716e83d15d5b2
  sayYoTest5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Should say Yo to Friend!"#) -}
3a3d309e3a5d57de5ab4150f3769b555
  sayYoTest6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Testing SayYo"#) -}
d8c864f7adf8c1e90453a05057705c14
  stringOpermuteTest :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Main.stringOpermuteTest6
                   Main.stringOpermuteTest1
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
a2756fc086d0bb7c53ec16d336ff2e61
  stringOpermuteTest1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Tasty.HUnit.Orig.@=?2
                        @ [GHC.Types.Char]
                        GHC.Classes.$fEq[]_$s$fEq[]1
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Main.stringOpermuteTest5
                        Main.stringOpermuteTest4
                        Main.stringOpermuteTest2
                        eta1 of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.[] @ GHC.Types.Char #) }) -}
51dec49c942af5a0b97fcf26082f60d7
  stringOpermuteTest2 :: GHC.Base.String
  {- Unfolding: (StringMingling.stringOpermute
                   Main.stringOpermuteTest3) -}
543927909b33ab378a04c6f6c38ecc19
  stringOpermuteTest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "abcdpqrs"#) -}
8f08d25820757eb22066a27d6fa03ab4
  stringOpermuteTest4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "badcqpsr"#) -}
88d2bd007867f53871f5b8fd2954e72a
  stringOpermuteTest5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Should replace i and i + 1 in abcdpqrs"#) -}
3013d7ba1a641318d2710a08ae9bb4c0
  stringOpermuteTest6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Testing stringOpermute"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

